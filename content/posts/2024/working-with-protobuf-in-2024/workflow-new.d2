# d2 content/posts/2024/working-with-protobuf-in-2024/workflow-new.d2 --sketch --theme 200 --pad=20 content/posts/2024/working-with-protobuf-in-2024/workflow-new.svg

style: {
  fill: transparent
}

define services, messages, enums
proto file
define services, messages, enums -> proto file: json-to-protobuf
define services, messages, enums -> proto file: protobuf pal

proto file -> buf tools

buf tools {
  label: ""
  icon: icons/buf.svg
  icon.near: top-center
  style.font-color: black
  style.fill: lightBlue

  grid-rows: 2
  grid-columns: 2

  buf lint {
    label: "buf lint\nstyle checks"
  }

  buf format {
    label: "buf format\nautoformatting"
  }

  buf breaking {
    label: "buf breaking\nbreaking change detection"
    
  }

  buf generate {
    label: "buf generate\ngenerate code\n(with dependencies!)"
  }
}

buf tools -> proto file: find issues\nand iterate {
  style.stroke: orange
  style.font-color: orange
  style.stroke-dash: 2
}

mock server {
  label: "FauxRPC\nstub server"
  icon: icons/fauxrpc.png
  icon.near: bottom-center
  style.fill: teal
}

buf tools -> generated code
generated code -> implement server logic

buf tools -> mock server

implement server logic -> proto file: find issues\nand iterate {
  style.stroke: orange
  style.font-color: orange
  style.stroke-dash: 2
}

mock server <-> use client to interact with services
generated code -> use client to interact with services
use client to interact with services <-> implement server logic
use client to interact with services -> proto file: find issues\nand iterate {
  style.stroke: orange
  style.font-color: orange
  style.stroke-dash: 2
}